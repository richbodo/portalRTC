)]}'
{"version":3,"sources":["home.coffee"],"names":[],"mappings":"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","file":"/client/templates/home.coffee.js","sourcesContent":["Session.set('hasWebRTC', false)\n\nTemplate.home.created = ->\n  # This is the config used to create the RTCPeerConnection\n  if Meteor.settings?.public?.servers?\n    servers = Meteor.settings.public.servers\n  else\n    # Default to Google's stun server\n    servers =\n      iceServers: [\n      ]\n\n  rtcPeerConnectionConfig = {}\n\n  dataChannelConfig = {}\n\n  # XXX: hack for Firefox media constraints\n  # see https://bugzilla.mozilla.org/show_bug.cgi?id=1006725\n  videoConfig =\n    mandatory:\n      maxWidth: 320\n      maxHeight: 240\n\n  mediaConfig =\n    video: true\n    audio: true\n\n  webRTCSignaller = null\n  dataChannel = null\n  roomName = Router.current().params.roomName\n  Session.set('roomName', roomName)\n\n  # Try and create an RTCPeerConnection if supported\n  hasWebRTC = false\n  if RTCPeerConnection?\n    @_webRTCSignaller = SingleWebRTCSignallerFactory.create(\n      share.stream,\n      roomName,\n      'master',\n      servers,\n      rtcPeerConnectionConfig,\n      mediaConfig\n    )\n    hasWebRTC = true\n  else\n    console.error 'No RTCPeerConnection available :('\n  Session.set('hasWebRTC', hasWebRTC)\n  return unless hasWebRTC\n\n  @_webRTCSignaller.start()\n\n\nTemplate.home.destroyed = ->\n  @_webRTCSignaller.stop()\n\n\nTemplate.home.helpers\n  roomName: ->\n    roomName = Session.get('roomName')\n    if roomName\n      Meteor.absoluteUrl(Router.path('home', roomName: roomName)[1...])\n\n  localStream: ->\n    return unless Session.get('hasWebRTC')\n    Template.instance()._webRTCSignaller.getLocalStream()\n\n  remoteStream: ->\n    return unless Session.get('hasWebRTC')\n    Template.instance()._webRTCSignaller.getRemoteStream()\n\n  canCall: ->\n    return 'disabled' unless Session.get('hasWebRTC')\n    webRTCSignaller = Template.instance()._webRTCSignaller\n    'disabled' unless webRTCSignaller.started() \\\n      and not webRTCSignaller.inCall() \\\n      and not webRTCSignaller.waitingForResponse() \\\n      and not webRTCSignaller.waitingToCreateAnswer()\n\n  canSend: ->\n    return 'disabled' unless Session.get('hasWebRTC')\n    'disabled' unless dataChannel.isOpen()\n\n  callText: ->\n    unless Session.get('hasWebRTC')\n      return \"Your browser doesn't suuport Web RTC :(\"\n    webRTCSignaller = Template.instance()._webRTCSignaller\n    if webRTCSignaller.waitingForUserMedia()\n      return 'Waiting for you to share your camera'\n    if webRTCSignaller.waitingForResponse()\n      return 'Waiting for response'\n    if webRTCSignaller.waitingToCreateAnswer()\n      return 'Someone is calling you'\n    'Begin call with the other person in the room'\n\n\nTemplate.home.events\n  'click [name=\"call\"]': (event, template) ->\n    event.preventDefault()\n    return unless template._webRTCSignaller?\n    template._webRTCSignaller.createOffer()\n\n"]}