)]}'
{"version":3,"sources":["image_stream.coffee"],"names":[],"mappings":"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","file":"/client/templates/image_stream.coffee.js","sourcesContent":["Session.set('hasWebRTC', false)\n\nTemplate.ImageStream.created = ->\n  @_imageStreamer = new ImageStreamer()\n  @_imageVideoUserMediaGetter = new ImageVideoUserMediaGetter()\n\n  # This is the config used to create the RTCPeerConnection\n  if Meteor.settings?.public?.servers?\n    servers = Meteor.settings.public.servers\n  else\n    # Default to Google's stun server\n    servers =\n      iceServers: [\n      ]\n\n  config = {}\n\n  # XXX: hack for Firefox media constraints\n  # see https://bugzilla.mozilla.org/show_bug.cgi?id=1006725\n  videoConfig =\n    mandatory:\n      maxWidth: 320\n      maxHeight: 240\n\n  mediaConfig =\n    video: videoConfig\n    audio: false\n\n  dataChannel = null\n\n  signallingChannelName = Router.current().url\n  Session.set('roomName', Router.current().params.roomName)\n  # Try and create an RTCPeerConnection if supported\n  hasWebRTC = false\n  if RTCPeerConnection?\n    @_webRTCSignaller = SingleWebRTCSignallerFactory.create(\n        share.stream,\n        signallingChannelName,\n        'master',\n        servers,\n        config,\n        mediaConfig)\n    hasWebRTC = true\n  else\n    console.error 'No RTCPeerConnection available :('\n  Session.set('hasWebRTC', hasWebRTC)\n  return unless hasWebRTC\n\n  @_webRTCSignaller.start()\n\n\nTemplate.ImageStream.rendered = ->\n  dataChannelConfig = {}\n  dataChannel = ReactiveDataChannelFactory.fromLabelAndConfig(\n    'test',\n    dataChannelConfig\n  )\n  @_webRTCSignaller.addDataChannel(dataChannel)\n  @_imageVideoUserMediaGetter.start()\n  @_imageStreamer.init(\n    dataChannel,\n    @find('#local-stream'),\n    @find('#image-stream')\n  )\n  @_imageStreamer.start()\n\n\nTemplate.ImageStream.destroyed = ->\n  console.log 'stopping'\n  @_imageStreamer.stop()\n  @_imageVideoUserMediaGetter.stop()\n  @_webRTCSignaller.stop()\n\n\nTemplate.ImageStream.helpers\n  roomName: ->\n    roomName = Session.get('roomName')\n    if roomName\n      Meteor.absoluteUrl(Router.path('ImageStream', roomName: roomName)[1...])\n\n  localStream: ->\n    imageVideoUserMediaGetter = Template.instance()._imageVideoUserMediaGetter\n    imageVideoUserMediaGetter.getStreamUrl()\n\n  remoteStream: ->\n    return unless Session.get('hasWebRTC')\n    Template.instance()._webRTCSignaller.getRemoteStream()\n\n  canCall: ->\n    return 'disabled' unless Session.get('hasWebRTC')\n    webRTCSignaller = Template.instance()._webRTCSignaller\n    'disabled' unless webRTCSignaller.started() \\\n      and not webRTCSignaller.inCall() \\\n      and not webRTCSignaller.waitingForResponse() \\\n      and not webRTCSignaller.waitingToCreateAnswer()\n\n  callText: ->\n    unless Session.get('hasWebRTC')\n      return \"Your browser doesn't suuport Web RTC :(\"\n    webRTCSignaller = Template.instance()._webRTCSignaller\n    if webRTCSignaller.waitingForUserMedia()\n      return 'Waiting for you to share your camera'\n    if webRTCSignaller.waitingForResponse()\n      return 'Waiting for response'\n    if webRTCSignaller.waitingToCreateAnswer()\n      return 'Someone is calling you'\n    'Begin call with the other person in the room'\n\n  imageQuality: ->\n    imageStreamer = Template.instance()._imageStreamer\n    imageStreamer.getQuality()\n\n  imageWidth: ->\n    imageStreamer = Template.instance()._imageStreamer\n    imageStreamer.getWidth()\n\n  imageHeight: ->\n    imageStreamer = Template.instance()._imageStreamer\n    imageStreamer.getHeight()\n\n  dataChannelFps: ->\n    imageStreamer = Template.instance()._imageStreamer\n    imageStreamer.getFps()\n\n  localImageSrc: ->\n    imageStreamer = Template.instance()._imageStreamer\n    imageStreamer.getLocalImageDataUrl()\n\n  localImageKB: ->\n    imageStreamer = Template.instance()._imageStreamer\n    bytesLength = imageStreamer.getLocalImageByteLength()\n    (bytesLength / 1000).toFixed(2)\n\n  localImageKBps: ->\n    imageStreamer = Template.instance()._imageStreamer\n    bytesPerSecond = imageStreamer.getLocalImageBytesPerSecond()\n    (bytesPerSecond / 1000).toFixed(2)\n\n  localImageKbps: ->\n    imageStreamer = Template.instance()._imageStreamer\n    bytesPerSecond = imageStreamer.getLocalImageBytesPerSecond()\n    (bytesPerSecond * 8 / 1000).toFixed(2)\n\n  imageSrc: ->\n    imageStreamer = Template.instance()._imageStreamer\n    if imageStreamer.ready()\n      imageStreamer.getOtherVideo()\n\n\nTemplate.ImageStream.events\n  'click [name=\"call\"]': (event) ->\n    event.preventDefault()\n    webRTCSignaller = Template.instance()._webRTCSignaller\n    return unless webRTCSignaller?\n    webRTCSignaller.createOffer()\n\n  'input #image-quality': (event, template) ->\n    event.preventDefault()\n    template._imageStreamer.setQuality(parseFloat($(event.target).val()))\n\n  'input #image-width': (event, template) ->\n    event.preventDefault()\n    template._imageStreamer.setWidth(parseFloat($(event.target).val()))\n\n  'input #image-height': (event, template) ->\n    event.preventDefault()\n    template._imageStreamer.setHeight(parseFloat($(event.target).val()))\n\n  'input #data-channel-fps': (event, template) ->\n    event.preventDefault()\n    template._imageStreamer.setFps(parseFloat($(event.target).val()))\n\n"]}