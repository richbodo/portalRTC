)]}'
{"version":3,"sources":["multi_draw.coffee"],"names":[],"mappings":"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","file":"/client/templates/multi_draw.coffee.js","sourcesContent":["if Meteor.settings?.public?.servers?\n  servers = Meteor.settings.public.servers\nelse\n  # Default to Google's stun server\n  servers =\n    iceServers: [\n    ]\n\nconfig = {}\n\ndataChannelConfig =\n  ordered: false\n  maxRetransmitTime: 0\n\nSTATE_START = 0\nSTATE_MOVE = 1\nSTATE_END = 2\n\nclass DrawingCanvas\n  constructor: (@_canvas) ->\n    @_ctx = @_canvas.getContext '2d'\n    @_strokes = []\n    @_lastStroke = null\n    resize = =>\n      height = window.innerHeight\n      width = window.innerWidth\n      if height > width\n        height *= width / height\n      else\n        width *= height / width\n      @_canvas.width = width\n      @_canvas.height = height\n    resize()\n    $(window).resize resize\n\n  _getScreenX: (relativeX) ->\n    @_canvas.width * relativeX\n\n  _getScreenY: (relativeY) ->\n    @_canvas.height * relativeY\n\n  _renderStrokes: =>\n    requestAnimationFrame(@_renderStrokes)\n    return if @_strokes.length == 0\n    @_ctx.stokeStyle = '#000'\n    @_ctx.beginPath()\n    if @_lastStroke?\n      @_ctx.moveTo(@_getScreenX(@_lastStroke.x), @_getScreenY(@_lastStroke.y))\n    for stroke in @_strokes\n      @_ctx.lineTo(@_getScreenX(stroke.x), @_getScreenY(stroke.y))\n      if stroke.state = STATE_START or stroke.state == STATE_END\n        @_lastStroke = null\n      else\n        @_lastStroke = stroke\n    @_ctx.stroke()\n    @_strokes.length = 0\n\n  addStroke: (stroke) ->\n    @_strokes.push stroke\n\n  renderStrokes: ->\n    @_renderStrokes()\n\n\nTemplate.multiDraw.rendered = ->\n  webRTCSignaller = new MultiWebRTCSignallerManager(\n    'drawing',\n    'master',\n    servers,\n    config\n  )\n\n  canvas = @find('#drawing')\n\n  drawingCanvas = new DrawingCanvas(canvas)\n  drawingCanvas.renderStrokes()\n\n  @autorun =>\n    message = webRTCSignaller.getData()\n    if message?\n      stroke = JSON.parse message\n      drawingCanvas.addStroke stroke\n\nTemplate.drawer.rendered = ->\n  @_id = Random.hexString(20)\n  webRTCSignaller = SingleWebRTCSignallerFactory.create(\n    'drawing',\n    @_id,\n    servers,\n    config\n  )\n  @_dataChannel = ReactiveDataChannelFactory.fromLabelAndConfig(\n    'drawing',\n    dataChannelConfig\n  )\n  webRTCSignaller.start()\n  webRTCSignaller.addDataChannel(@_dataChannel)\n  webRTCSignaller.createOffer()\n\n  canvas = @find('#drawer')\n\n  drawingCanvas = new DrawingCanvas(canvas)\n  drawingCanvas.renderStrokes()\n\n  @_sendEventData = (event, state) =>\n    if event.originalEvent?.changedTouches?\n      x = event.originalEvent.changedTouches[0].pageX\n      y = event.originalEvent.changedTouches[0].pageY\n    else\n      x = event.pageX\n      y = event.pageY\n    x -= $(event.target).offset().left\n    y -=  $(event.target).offset().top\n    stroke =\n      x: x / $(canvas).width()\n      y: y / $(canvas).height()\n      state: state\n    @_dataChannel.sendData JSON.stringify stroke\n    drawingCanvas.addStroke(stroke)\n\n  $(window).on 'mouseup', =>\n    @_mouseDown = false\n\nTemplate.drawer.events\n  'mousedown #drawer': (event, template) ->\n    template._mouseDown = true\n    template._sendEventData(event, STATE_START)\n\n  'touchstart #drawer': (event, template) ->\n    template._sendEventData(event, STATE_START)\n\n  'mousemove #drawer': (event, template) ->\n    if template._mouseDown\n      template._sendEventData(event, STATE_MOVE)\n\n  'touchmove #drawer': (event, template) ->\n    template._sendEventData(event, STATE_MOVE)\n\n  'mouseup #drawer': (event, template) ->\n    if template._mouseDown\n      template._sendEventData(event, STATE_END)\n\n  'touchend #drawer': (event, template) ->\n    template._sendEventData(event, STATE_END)\n\n"]}